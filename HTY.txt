
# assembling cmd commands
make assemble
./build/asembler -o snazzleOut in.snazzle

# linking cmd commands
make linker
./build/linker -hex  ./build/snazzleOut.bin

# linking two files
./build/linker -o in.snazzle_linkerOut -hex  ./outputs/in.snazzle_assemblyOut.o ./outputs/in.snazzle2_assemblyOut.o


./build/asembler -o myTest1ASM myTest1
./build/linker -place=my_code_main@0x40000000 -o myTest1LNK -hex ./outputs/myTest1ASM.o
./build/emulator ./outputs/myTest1LNK.hex




-------Tests-----

Tested and working:
bgt %reg, %reg, sym 	//jump backwards, relative
ld $imm, %reg 
mul,sub %reg, %reg   

To test:
// jump absolute
// operand with different types of addressing;
// operand: $symbol(adresa) ok, symbol(vr. na adresi) ok, -||-literal, [%reg] (ind reg), (ind reg s pomerajem) ok
// 


------Bugs------
- .word doesnt chech if its going to cross threshold of inserting litpool; to mitigate, cant have more than 12 initializators




